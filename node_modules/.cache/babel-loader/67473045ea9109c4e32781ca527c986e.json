{"ast":null,"code":"var _jsxFileName = \"/Users/MESHAL/Projects/NodeJS/car_park_task/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Reset from './Reset';\nimport Park from './Park';\nimport Parking from './Parking';\n\nvar App = function App(_ref) {\n  var settings = _ref.settings,\n      operations = _ref.operations,\n      onReset = _ref.onReset,\n      onSelectRows = _ref.onSelectRows,\n      onSelectCols = _ref.onSelectCols,\n      onPark = _ref.onPark,\n      onParkInit = _ref.onParkInit,\n      onParkSelectRow = _ref.onParkSelectRow,\n      onParkSelectCol = _ref.onParkSelectCol,\n      onParkSelectDir = _ref.onParkSelectDir;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \" SETTINGS: \", JSON.stringify(settings)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \" OPERATIONS: \", JSON.stringify(operations)), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"CAR PARK TASK\"), React.createElement(Reset, {\n    value: settings,\n    verb: onReset,\n    onSelectRows: onSelectRows,\n    onSelectCols: onSelectCols,\n    row: settings.selected_rows,\n    col: settings.selected_cols,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Park, {\n    verb: onPark,\n    onParkSelectRow: onParkSelectRow,\n    onParkSelectCol: onParkSelectCol,\n    onParkSelectDir: onParkSelectDir,\n    rows: settings.rows,\n    cols: settings.cols,\n    row: operations.selected_row,\n    col: operations.selected_col,\n    dir: operations.selected_dir,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Parking, {\n    settingsValue: settings,\n    operationsValue: operations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    settings: state.settingsState,\n    operations: state.operationsState\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onReset: function onReset() {\n      return dispatch({\n        type: 'RESET',\n        init_park: dispatch\n      });\n    },\n    onSelectRows: function onSelectRows(rows) {\n      return dispatch({\n        type: 'SELECT_ROWS',\n        rows: rows\n      });\n    },\n    onSelectCols: function onSelectCols(cols) {\n      return dispatch({\n        type: 'SELECT_COLS',\n        cols: cols\n      });\n    },\n    onPark: function onPark() {\n      return dispatch({\n        type: 'PARK'\n      });\n    },\n    onParkInit: function onParkInit() {\n      return dispatch({\n        type: 'PARK_INIT'\n      });\n    },\n    onParkSelectRow: function onParkSelectRow(row) {\n      return dispatch({\n        type: 'SELECT_ROW',\n        row: row\n      });\n    },\n    onParkSelectCol: function onParkSelectCol(col) {\n      return dispatch({\n        type: 'SELECT_COL',\n        col: col\n      });\n    },\n    onParkSelectDir: function onParkSelectDir(dir) {\n      return dispatch({\n        type: 'SELECT_DIR',\n        dir: dir\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/MESHAL/Projects/NodeJS/car_park_task/src/components/App.js"],"names":["React","connect","Reset","Park","Parking","App","settings","operations","onReset","onSelectRows","onSelectCols","onPark","onParkInit","onParkSelectRow","onParkSelectCol","onParkSelectDir","JSON","stringify","selected_rows","selected_cols","rows","cols","selected_row","selected_col","selected_dir","mapStateToProps","state","settingsState","operationsState","mapDispatchToProps","dispatch","type","init_park","row","col","dir"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,UAAZ,QAAYA,UAAZ;AAAA,MAAwBC,OAAxB,QAAwBA,OAAxB;AAAA,MAAgCC,YAAhC,QAAgCA,YAAhC;AAAA,MAA8CC,YAA9C,QAA8CA,YAA9C;AAAA,MAA4DC,MAA5D,QAA4DA,MAA5D;AAAA,MAAmEC,UAAnE,QAAmEA,UAAnE;AAAA,MAA+EC,eAA/E,QAA+EA,eAA/E;AAAA,MAA+FC,eAA/F,QAA+FA,eAA/F;AAAA,MAAgHC,eAAhH,QAAgHA,eAAhH;AAAA,SACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBC,IAAI,CAACC,SAAL,CAAeX,QAAf,CAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmBU,IAAI,CAACC,SAAL,CAAeV,UAAf,CAAnB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAKM,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,QAAd;AACE,IAAA,IAAI,EAAEE,OADR;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,GAAG,EAAEJ,QAAQ,CAACY,aAJhB;AAKE,IAAA,GAAG,EAAEZ,QAAQ,CAACa,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALN,EAaM,oBAAC,IAAD;AACE,IAAA,IAAI,EAAER,MADR;AAEE,IAAA,eAAe,EAAEE,eAFnB;AAGE,IAAA,eAAe,EAAEC,eAHnB;AAIE,IAAA,eAAe,EAAEC,eAJnB;AAKE,IAAA,IAAI,EAAET,QAAQ,CAACc,IALjB;AAME,IAAA,IAAI,EAAEd,QAAQ,CAACe,IANjB;AAOE,IAAA,GAAG,EAAEd,UAAU,CAACe,YAPlB;AAQE,IAAA,GAAG,EAAEf,UAAU,CAACgB,YARlB;AASE,IAAA,GAAG,EAAEhB,UAAU,CAACiB,YATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbN,EAyBM,oBAAC,OAAD;AAAU,IAAA,aAAa,EAAElB,QAAzB;AAAmC,IAAA,eAAe,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBN,CADU;AAAA,CAAZ;;AA6BA,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCpB,IAAAA,QAAQ,EAAEoB,KAAK,CAACC,aADgB;AAEhCpB,IAAAA,UAAU,EAAEmB,KAAK,CAACE;AAFc,GAAL;AAAA,CAA7B;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCtB,IAAAA,OAAO,EAAE;AAAA,aAAMsB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAkBC,QAAAA,SAAS,EAAEF;AAA7B,OAAD,CAAd;AAAA,KAD6B;AAEtCrB,IAAAA,YAAY,EAAE,sBAACW,IAAD;AAAA,aAAUU,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBX,QAAAA,IAAI,EAAEA;AAA7B,OAAD,CAAlB;AAAA,KAFwB;AAGtCV,IAAAA,YAAY,EAAE,sBAACW,IAAD;AAAA,aAAUS,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBV,QAAAA,IAAI,EAACA;AAA5B,OAAD,CAAlB;AAAA,KAHwB;AAItCV,IAAAA,MAAM,EAAG;AAAA,aAAMmB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAJ6B;AAKtCnB,IAAAA,UAAU,EAAG;AAAA,aAAMkB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KALyB;AAMtClB,IAAAA,eAAe,EAAE,yBAACoB,GAAD;AAAA,aAASH,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAqBE,QAAAA,GAAG,EAACA;AAAzB,OAAD,CAAjB;AAAA,KANqB;AAOtCnB,IAAAA,eAAe,EAAE,yBAACoB,GAAD;AAAA,aAASJ,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAqBG,QAAAA,GAAG,EAACA;AAAzB,OAAD,CAAjB;AAAA,KAPqB;AAQtCnB,IAAAA,eAAe,EAAE,yBAACoB,GAAD;AAAA,aAASL,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAqBI,QAAAA,GAAG,EAACA;AAAzB,OAAD,CAAjB;AAAA;AARqB,GAAL;AAAA,CAAnC;;AAWA,eAAelC,OAAO,CAACwB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CxB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Reset from './Reset';\nimport Park from './Park';\nimport Parking from './Parking';\n\nconst App = ({settings, operations, onReset,onSelectRows, onSelectCols, onPark,onParkInit, onParkSelectRow,onParkSelectCol, onParkSelectDir}) =>\n  <div>\n      <div> SETTINGS: {JSON.stringify(settings)}</div>\n      <div> OPERATIONS: {JSON.stringify(operations)}</div>\n      <h2>CAR PARK TASK</h2>\n\n        <Reset value={settings} \n          verb={onReset} \n          onSelectRows={onSelectRows} \n          onSelectCols={onSelectCols} \n          row={settings.selected_rows} \n          col={settings.selected_cols}\n        />\n\n        <Park \n          verb={onPark}\n          onParkSelectRow={onParkSelectRow} \n          onParkSelectCol={onParkSelectCol} \n          onParkSelectDir={onParkSelectDir} \n          rows={settings.rows} \n          cols={settings.cols} \n          row={operations.selected_row} \n          col={operations.selected_col} \n          dir={operations.selected_dir} \n        />\n\n        <Parking  settingsValue={settings} operationsValue={operations} />\n  </div>\n\nconst mapStateToProps = state => ({\n  settings: state.settingsState,\n  operations: state.operationsState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onReset: () => dispatch({ type: 'RESET' , init_park: dispatch}),\n  onSelectRows: (rows) => dispatch({ type: 'SELECT_ROWS', rows: rows}),\n  onSelectCols: (cols) => dispatch({ type: 'SELECT_COLS', cols:cols}),\n  onPark:  () => dispatch({ type: 'PARK'}),\n  onParkInit:  () => dispatch({ type: 'PARK_INIT'}),\n  onParkSelectRow: (row) => dispatch({ type: 'SELECT_ROW',row:row}),\n  onParkSelectCol: (col) => dispatch({ type: 'SELECT_COL',col:col}),\n  onParkSelectDir: (dir) => dispatch({ type: 'SELECT_DIR',dir:dir})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}