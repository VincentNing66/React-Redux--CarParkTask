{"ast":null,"code":"import _objectSpread from \"/Users/Vincent/Desktop/IT/car_park_task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar INITIAL_STATE = {\n  row: 0,\n  col: 0,\n  dir: 1,\n  dirDefault: \"NONE\",\n  selected_row: 0,\n  selected_col: 0,\n  selected_dir: 1\n};\n\nvar operationsReducer = function operationsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var dirReport = function dirReport(num) {\n    switch (num) {\n      case 1:\n        return \"NORTH\";\n\n      case 2:\n        return \"SOUTH\";\n\n      case 3:\n        return \"EAST\";\n\n      case 4:\n        return \"WEST\";\n\n      default:\n        break;\n    }\n  }; //alert(`CALL ${action.type} ${action.rows}`);\n\n\n  switch (action.type) {\n    case 'PARK':\n      return _objectSpread({}, state, {\n        row: state.selected_row,\n        col: state.selected_col,\n        dir: state.selected_dir\n      });\n\n    case 'PARK_INIT':\n      return {\n        row: 0,\n        col: 0,\n        dir: 1,\n        selected_row: 0,\n        selected_col: 0,\n        selected_dir: 1\n      };\n\n    case 'SELECT_ROW':\n      return _objectSpread({}, state, {\n        selected_row: action.row\n      });\n\n    case 'SELECT_COL':\n      return _objectSpread({}, state, {\n        selected_col: action.col\n      });\n\n    case 'SELECT_DIR':\n      return _objectSpread({}, state, {\n        selected_dir: action.dir\n      });\n\n    case 'PARK_MOVE':\n      //alert(`CALL ${action.max_rows} x ${action.max_cols}`);\n      if (state.dir == 1 && state.row != 1) {\n        return _objectSpread({}, state, {\n          row: state.row - 1\n        });\n      }\n\n      if (state.dir == 2 && state.row < action.max_rows) {\n        return _objectSpread({}, state, {\n          row: Number(state.row) + 1\n        });\n      }\n\n      if (state.dir == 3 && state.col < action.max_cols) {\n        return _objectSpread({}, state, {\n          col: Number(state.col) + 1\n        });\n      }\n\n      if (state.dir == 4 && state.col != 1) {\n        return _objectSpread({}, state, {\n          col: state.col - 1\n        });\n      }\n\n      return _objectSpread({}, state);\n\n    case 'PARK_LEFT':\n      return _objectSpread({}, state, {\n        dir: 4\n      });\n\n    case 'PARK_RIGHT':\n      return _objectSpread({}, state, {\n        dir: 3\n      });\n\n    case 'PARK_REPORT':\n      alert(\"REPORT -> ROW: \".concat(state.row, \" | COL: \").concat(state.col, \" | DIRECTION: \").concat(dirReport(state.dir)));\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default operationsReducer;","map":{"version":3,"sources":["/Users/Vincent/Desktop/IT/car_park_task/src/reducers/operationsReducer.js"],"names":["INITIAL_STATE","row","col","dir","dirDefault","selected_row","selected_col","selected_dir","operationsReducer","state","action","dirReport","num","type","max_rows","Number","max_cols","alert"],"mappings":";AAAA,IAAMA,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,CADe;AAEpBC,EAAAA,GAAG,EAAE,CAFe;AAGpBC,EAAAA,GAAG,EAAE,CAHe;AAIpBC,EAAAA,UAAU,EAAE,MAJQ;AAKpBC,EAAAA,YAAY,EAAE,CALM;AAMpBC,EAAAA,YAAY,EAAE,CANM;AAOpBC,EAAAA,YAAY,EAAE;AAPM,CAAtB;;AAUA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAoC;AAAA,MAAnCC,KAAmC,uEAA3BT,aAA2B;AAAA,MAAZU,MAAY;;AAC5D,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AACzB,YAAQA,GAAR;AACE,WAAK,CAAL;AACE,eAAO,OAAP;;AACF,WAAK,CAAL;AACE,eAAO,OAAP;;AACF,WAAK,CAAL;AACE,eAAO,MAAP;;AACF,WAAK,CAAL;AACE,eAAO,MAAP;;AAEF;AACE;AAXJ;AAaD,GAdD,CAD4D,CAgB5D;;;AACA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,MAAL;AACE,+BAAYJ,KAAZ;AAAmBR,QAAAA,GAAG,EAAEQ,KAAK,CAACJ,YAA9B;AAA4CH,QAAAA,GAAG,EAAEO,KAAK,CAACH,YAAvD;AAAqEH,QAAAA,GAAG,EAACM,KAAK,CAACF;AAA/E;;AACF,SAAK,WAAL;AACE,aAAO;AAAEN,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE,CAAf;AAAkBC,QAAAA,GAAG,EAAC,CAAtB;AAAyBE,QAAAA,YAAY,EAAE,CAAvC;AAA0CC,QAAAA,YAAY,EAAC,CAAvD;AAAyDC,QAAAA,YAAY,EAAE;AAAvE,OAAP;;AACF,SAAK,YAAL;AACE,+BAAYE,KAAZ;AAAmBJ,QAAAA,YAAY,EAAEK,MAAM,CAACT;AAAxC;;AACF,SAAK,YAAL;AACE,+BAAYQ,KAAZ;AAAmBH,QAAAA,YAAY,EAAEI,MAAM,CAACR;AAAxC;;AACF,SAAK,YAAL;AACE,+BAAYO,KAAZ;AAAmBF,QAAAA,YAAY,EAAEG,MAAM,CAACP;AAAxC;;AACF,SAAK,WAAL;AACE;AACA,UAAGM,KAAK,CAACN,GAAN,IAAa,CAAb,IAAkBM,KAAK,CAACR,GAAN,IAAa,CAAlC,EAAoC;AACjC,iCAAYQ,KAAZ;AAAmBR,UAAAA,GAAG,EAACQ,KAAK,CAACR,GAAN,GAAY;AAAnC;AACF;;AACD,UAAGQ,KAAK,CAACN,GAAN,IAAa,CAAb,IAAkBM,KAAK,CAACR,GAAN,GAAYS,MAAM,CAACI,QAAxC,EAAiD;AAC9C,iCAAYL,KAAZ;AAAmBR,UAAAA,GAAG,EAAEc,MAAM,CAACN,KAAK,CAACR,GAAP,CAAN,GAAoB;AAA5C;AACF;;AACD,UAAGQ,KAAK,CAACN,GAAN,IAAa,CAAb,IAAkBM,KAAK,CAACP,GAAN,GAAYQ,MAAM,CAACM,QAAxC,EAAiD;AAC9C,iCAAYP,KAAZ;AAAmBP,UAAAA,GAAG,EAAEa,MAAM,CAACN,KAAK,CAACP,GAAP,CAAN,GAAoB;AAA5C;AACF;;AACD,UAAGO,KAAK,CAACN,GAAN,IAAa,CAAb,IAAkBM,KAAK,CAACP,GAAN,IAAa,CAAlC,EAAqC;AAClC,iCAAYO,KAAZ;AAAmBP,UAAAA,GAAG,EAACO,KAAK,CAACP,GAAN,GAAY;AAAnC;AACF;;AACD,+BAAYO,KAAZ;;AACF,SAAK,WAAL;AACE,+BAAYA,KAAZ;AAAmBN,QAAAA,GAAG,EAAE;AAAxB;;AACF,SAAK,YAAL;AACE,+BAAYM,KAAZ;AAAmBN,QAAAA,GAAG,EAAE;AAAxB;;AACF,SAAK,aAAL;AACEc,MAAAA,KAAK,0BAAmBR,KAAK,CAACR,GAAzB,qBAAuCQ,KAAK,CAACP,GAA7C,2BAAiES,SAAS,CAACF,KAAK,CAACN,GAAP,CAA1E,EAAL;AACA,+BAAYM,KAAZ;;AACF;AAAS,aAAOA,KAAP;AAjCX;AAmCD,CApDD;;AAsDA,eAAeD,iBAAf","sourcesContent":["const INITIAL_STATE = {\n  row: 0,\n  col: 0,\n  dir: 1,\n  dirDefault :\"NONE\",\n  selected_row: 0,\n  selected_col: 0,\n  selected_dir: 1\n};\n\nconst operationsReducer = (state = INITIAL_STATE, action)  => {\n  const dirReport = (num) => {\n    switch (num) {\n      case 1:\n        return \"NORTH\";\n      case 2:\n        return \"SOUTH\";\n      case 3:\n        return \"EAST\";\n      case 4:\n        return \"WEST\";\n    \n      default:\n        break;\n    }\n  }\n  //alert(`CALL ${action.type} ${action.rows}`);\n  switch (action.type) {\n    case 'PARK':\n      return { ...state, row: state.selected_row, col: state.selected_col, dir:state.selected_dir};\n    case 'PARK_INIT':\n      return { row: 0, col: 0, dir:1, selected_row: 0, selected_col:0,selected_dir: 1};\n    case 'SELECT_ROW':\n      return { ...state, selected_row: action.row};\n    case 'SELECT_COL':\n      return { ...state, selected_col: action.col};\n    case 'SELECT_DIR':\n      return { ...state, selected_dir: action.dir};\n    case 'PARK_MOVE':\n      //alert(`CALL ${action.max_rows} x ${action.max_cols}`);\n      if(state.dir == 1 && state.row != 1){\n         return { ...state, row:state.row - 1};\n      }\n      if(state.dir == 2 && state.row < action.max_rows){\n         return { ...state, row: Number(state.row) + 1};\n      }\n      if(state.dir == 3 && state.col < action.max_cols){\n         return { ...state, col: Number(state.col) + 1};\n      }\n      if(state.dir == 4 && state.col != 1 ){\n         return { ...state, col:state.col - 1};\n      }\n      return { ...state};\n    case 'PARK_LEFT':\n      return { ...state, dir: 4};\n    case 'PARK_RIGHT':\n      return { ...state, dir: 3};\n    case 'PARK_REPORT':\n      alert(`REPORT -> ROW: ${state.row} | COL: ${state.col} | DIRECTION: ${dirReport(state.dir)}`);\n      return { ...state};\n    default: return state;\n  }\n}\n\nexport default operationsReducer;\n"]},"metadata":{},"sourceType":"module"}