{"ast":null,"code":"var _jsxFileName = \"/Users/MESHAL/Projects/NodeJS/car_park_task/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Reset from './Reset';\nimport Park from './Park';\nimport Parking from './Parking';\n\nvar App = function App(_ref) {\n  var settings = _ref.settings,\n      operations = _ref.operations,\n      onReset = _ref.onReset,\n      onPark = _ref.onPark;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"CAR PARK TASK\"), React.createElement(Reset, {\n    value: settings,\n    verb: onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(Park, {\n    settings: settings,\n    value: operations,\n    verb: onPark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(Parking, {\n    settingsValue: settings,\n    operationsValue: operations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    settings: state.settingsState,\n    operations: state.operationsState\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onReset: function onReset() {\n      return dispatch({\n        type: 'RESET'\n      });\n    },\n    onSelectRows: function onSelectRows(rows) {\n      return dispatch({\n        type: 'SELECT_ROWS',\n        rows: rows,\n        cols: cols\n      });\n    },\n    onSelectCols: function onSelectCols(cols) {\n      return dispatch({\n        type: 'SELECT_COLS',\n        rows: rows,\n        cols: cols\n      });\n    },\n    onPark: function onPark(park) {\n      return dispatch({\n        type: 'PARK',\n        park: park\n      });\n    },\n    onParkSelectRow: function onParkSelectRow(row) {\n      return dispatch({\n        type: 'SELECT_ROW',\n        row: row\n      });\n    },\n    onParkSelectCol: function onParkSelectCol(col) {\n      return dispatch({\n        type: 'SELECT_COL',\n        col: col\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/MESHAL/Projects/NodeJS/car_park_task/src/components/App.js"],"names":["React","connect","Reset","Park","Parking","App","settings","operations","onReset","onPark","mapStateToProps","state","settingsState","operationsState","mapDispatchToProps","dispatch","type","onSelectRows","rows","cols","onSelectCols","park","onParkSelectRow","row","onParkSelectCol","col"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,UAAZ,QAAYA,UAAZ;AAAA,MAAwBC,OAAxB,QAAwBA,OAAxB;AAAA,MAAiCC,MAAjC,QAAiCA,MAAjC;AAAA,SACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEM,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,QAAd;AAAwB,IAAA,IAAI,EAAEE,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,EAGM,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAGF,QAAjB;AAA2B,IAAA,KAAK,EAAEC,UAAlC;AAA8C,IAAA,IAAI,EAAEE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,EAIM,oBAAC,OAAD;AAAU,IAAA,aAAa,EAAEH,QAAzB;AAAmC,IAAA,eAAe,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,CADU;AAAA,CAAZ;;AAQA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCL,IAAAA,QAAQ,EAAEK,KAAK,CAACC,aADgB;AAEhCL,IAAAA,UAAU,EAAEI,KAAK,CAACE;AAFc,GAAL;AAAA,CAA7B;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCP,IAAAA,OAAO,EAAE;AAAA,aAAMO,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAD6B;AAEtCC,IAAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUH,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA,IAAI,EAAEA,IAA7B;AAAmCC,QAAAA,IAAI,EAACA;AAAxC,OAAD,CAAlB;AAAA,KAFwB;AAGtCC,IAAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,aAAUJ,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA,IAAI,EAAEA,IAA7B;AAAmCC,QAAAA,IAAI,EAACA;AAAxC,OAAD,CAAlB;AAAA,KAHwB;AAItCV,IAAAA,MAAM,EAAG,gBAAAY,IAAI;AAAA,aAAIN,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBK,QAAAA,IAAI,EAAJA;AAAhB,OAAD,CAAZ;AAAA,KAJyB;AAKtCC,IAAAA,eAAe,EAAE,yBAACC,GAAD;AAAA,aAASR,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAqBO,QAAAA,GAAG,EAACA;AAAzB,OAAD,CAAjB;AAAA,KALqB;AAMtCC,IAAAA,eAAe,EAAE,yBAACC,GAAD;AAAA,aAASV,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAqBS,QAAAA,GAAG,EAACA;AAAzB,OAAD,CAAjB;AAAA;AANqB,GAAL;AAAA,CAAnC;;AASA,eAAexB,OAAO,CAACS,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Reset from './Reset';\nimport Park from './Park';\nimport Parking from './Parking';\n\nconst App = ({settings, operations, onReset, onPark}) =>\n  <div>\n      <p>CAR PARK TASK</p>\n        <Reset value={settings} verb={onReset} /> \n        <Park settings ={settings} value={operations} verb={onPark} />\n        <Parking  settingsValue={settings} operationsValue={operations} /> \n  </div>\n\nconst mapStateToProps = state => ({\n  settings: state.settingsState,\n  operations: state.operationsState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onReset: () => dispatch({ type: 'RESET'}),\n  onSelectRows: (rows) => dispatch({ type: 'SELECT_ROWS', rows: rows, cols:cols}),\n  onSelectCols: (cols) => dispatch({ type: 'SELECT_COLS', rows: rows, cols:cols}),\n  onPark:  park => dispatch({ type: 'PARK', park }),\n  onParkSelectRow: (row) => dispatch({ type: 'SELECT_ROW',row:row}),\n  onParkSelectCol: (col) => dispatch({ type: 'SELECT_COL',col:col})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}