{"ast":null,"code":"var _jsxFileName = \"/Users/MESHAL/Projects/NodeJS/car_park_task/src/components/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Reset from './Reset';\nimport Park from './Park';\nimport Parking from './Parking';\n\nvar App = function App(_ref) {\n  var settings = _ref.settings,\n      operations = _ref.operations,\n      onReset = _ref.onReset,\n      onSelectRows = _ref.onSelectRows,\n      onSelectCols = _ref.onSelectCols,\n      onPark = _ref.onPark,\n      onParkInit = _ref.onParkInit,\n      onParkSelectRow = _ref.onParkSelectRow,\n      onParkSelectCol = _ref.onParkSelectCol,\n      onParkSelectDir = _ref.onParkSelectDir;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \" \", JSON.stringify(settings)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"CAR PARK TASK\"), React.createElement(Reset, {\n    value: settings,\n    verb: onReset,\n    onSelectRows: onSelectRows,\n    onSelectCols: onSelectCols,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(Parking, {\n    settingsValue: settings,\n    operationsValue: operations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    settings: state.settingsState,\n    operations: state.operationsState\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onReset: function onReset() {\n      return dispatch({\n        type: 'RESET'\n      });\n    },\n    onSelectRows: function onSelectRows(rows) {\n      return dispatch({\n        type: 'SELECT_ROWS',\n        rows: rows\n      });\n    },\n    onSelectCols: function onSelectCols(cols) {\n      return dispatch({\n        type: 'SELECT_COLS',\n        cols: cols\n      });\n    },\n    onPark: function onPark() {\n      return dispatch({\n        type: 'PARK'\n      });\n    },\n    onParkInit: function onParkInit() {\n      return dispatch({\n        type: 'PARK_INIT'\n      });\n    },\n    onParkSelectRow: function onParkSelectRow(row) {\n      return dispatch({\n        type: 'SELECT_ROW',\n        row: row\n      });\n    },\n    onParkSelectCol: function onParkSelectCol(col) {\n      return dispatch({\n        type: 'SELECT_COL',\n        col: col\n      });\n    },\n    onParkSelectDir: function onParkSelectDir(dir) {\n      return dispatch({\n        type: 'SELECT_DIR',\n        dir: dir\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/MESHAL/Projects/NodeJS/car_park_task/src/components/App.js"],"names":["React","connect","Reset","Park","Parking","App","settings","operations","onReset","onSelectRows","onSelectCols","onPark","onParkInit","onParkSelectRow","onParkSelectCol","onParkSelectDir","JSON","stringify","mapStateToProps","state","settingsState","operationsState","mapDispatchToProps","dispatch","type","rows","cols","row","col","dir"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Reset from './Reset';\nimport Park from './Park';\nimport Parking from './Parking';\n\nconst App = ({settings, operations, onReset,onSelectRows, onSelectCols, onPark,onParkInit, onParkSelectRow,onParkSelectCol, onParkSelectDir}) =>\n  <div>\n      <div> {JSON.stringify(settings)}</div>\n      <p>CAR PARK TASK</p>\n        <Reset value={settings} verb={onReset} onSelectRows={onSelectRows} onSelectCols={onSelectCols}/> \n        <Parking  settingsValue={settings} operationsValue={operations} /> \n  </div>\n\nconst mapStateToProps = state => ({\n  settings: state.settingsState,\n  operations: state.operationsState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onReset: () => dispatch({ type: 'RESET'}),\n  onSelectRows: (rows) => dispatch({ type: 'SELECT_ROWS', rows: rows}),\n  onSelectCols: (cols) => dispatch({ type: 'SELECT_COLS', cols:cols}),\n  onPark:  () => dispatch({ type: 'PARK'}),\n  onParkInit:  () => dispatch({ type: 'PARK_INIT'}),\n  onParkSelectRow: (row) => dispatch({ type: 'SELECT_ROW',row:row}),\n  onParkSelectCol: (col) => dispatch({ type: 'SELECT_COL',col:col}),\n  onParkSelectDir: (dir) => dispatch({ type: 'SELECT_DIR',dir:dir})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}